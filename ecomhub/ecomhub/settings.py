"""
Django settings for ecomhub project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

import google.generativeai as genai

genai.configure(api_key="AIzaSyAsFMT_csgYT7iV_3HxTwYsVd0EGxyzT-k")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #them de render

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-76!e9001+-f4+*wuq@2j%+kh))1nqs@)28v%mh#%0=h5j)&6m^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'admin_tools_stats',  # this must be BEFORE 'admin_tools' and 'django.contrib.admin'
    'django_nvd3',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ecommerces.apps.EcommercesConfig',
    'rest_framework',
    'oauth2_provider',
    'drf_yasg',
]

REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': ('oauth2_provider.contrib.rest_framework.OAuth2Authentication',)
}

OAUTH2_PROVIDER = {'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore'}

# import pymysql
#
# pymysql.install_as_MySQLdb()

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', #them de render
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecomhub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecomhub.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'ecommercedb_xfbz',
        'USER': 'ecommercedb_xfbz_user',
        'PASSWORD': 'FCTbQqgVqk85Tp1PPE1YK1jsVsYEDyHL',
        'HOST': 'dpg-d33gp9juibrs73ak9jgg-a',
        'PORT':'5432' # mặc định localhost
    }
}

AUTH_USER_MODEL = 'ecommerces.User'

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import cloudinary
import cloudinary.uploader
from cloudinary.utils import cloudinary_url

# Configuration
cloudinary.config(
    cloud_name="dvlwb6o7e",
    api_key="315637758944728",
    api_secret="A34d8SUWJZnBLiGAgOPEIhqRB_c",  # Click 'View API Keys' above to copy your API secret
    secure=True
)

ClIENT_ID='hRMVerx146F4KkujVUPpWDVzTLmccIO15IL0eIIq'
ClIENT_SECRET='BuXLf3T2Sz9HwqBkFa0gEVz8nYtSY3th741KT48LlZ3taye554laHbQ6CN4yPd9ampcaKcZ0o3z1FuHMroyBfZIwb4Q3hCP37reMi7n9zep7qIJQYWct6x8y4rFT2VPe'
PAYPAL_CLIENT_ID = "AZPYUeSjz4ON9OhcXgqwlEWtaizazqrv4ff-j3I22Z7IdXrj5c9Fc0JXpY1YOntF_XY5CJHBF7QJjREG"
PAYPAL_SECRET = "EOkhfgT4ROLx4vhhi1paZszUqAUaJvLJ22QQM6lgpo5OkO83lkJg0syZF1bRCI2GEJx2UM2BSmlEcna1"
